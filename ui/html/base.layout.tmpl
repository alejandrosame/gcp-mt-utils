{{define "base"}}
<!doctype html>
<html lang='en'>
    <head>
        <meta charset='utf-8'>
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{{template "title" .}} - Custom translations</title>
        <!-- Link to the CSS stylesheet and favicon -->
        <link rel='stylesheet' type="text/css"  href='/static/css/main.css'>
        <link rel="stylesheet" type="text/css" href="/static/css/swup/base.css" />
        <!-- Head script for landingpage -->
        <link rel="stylesheet" type="text/css" href="/static/css/landing/base.css"/>
        <link rel='shortcut icon' href='/static/img/favicon.ico' type='image/x-icon'>
        <!-- Also link to some fonts hosted by Google -->
        <link rel='stylesheet' href='https://fonts.googleapis.com/css?family=Ubuntu+Mono:400,700'>
        <!-- Bootstrap css -->
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">
        <link rel='stylesheet' type="text/css"  href='/static/css/override.bootstrap.css'>
        <!-- Add scripts -->
        <!-- Bootstrap -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js"></script>
        <!-- Swup -->
        <script src="/static/js/swup/dist/swup.js"></script>
        <!-- Landing page js -->
        <script src="/static/js/landing/imagesloaded.pkgd.min.js"></script>
        <script src="/static/js/landing/TweenMax.min.js"></script>
        <script src="/static/js/landing/demo.js"></script>

        <script>document.documentElement.className="js";var supportsCssVars=function(){var e,t=document.createElement("style");return t.innerHTML="root: { --tmp-var: bold; }",document.head.appendChild(t),e=!!(window.CSS&&window.CSS.supports&&window.CSS.supports("font-weight","var(--tmp-var)")),t.parentNode.removeChild(t),e};supportsCssVars()||alert("Please view this page in a modern browser that supports CSS Variables.");</script>
    </head>
    <body class="bg-dark">
        <header>
            <nav class="navbar navbar-expand-lg bg-dark navbar-dark fixed-top">
                <a class="navbar-brand" id="swup" href="/">Custom translations {{if .AuthenticatedUser}}{{.Languages}}{{end}}</a>
                <button class="navbar-toggler bg-dark" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="collapsibleNavbar">
                    <ul class="navbar-nav">
                        {{if .AuthenticatedUser}}
                            {{if or .AuthenticatedUser.Validator .AuthenticatedUser.Admin}}
                                <li class="nav-item bg-dark">
                                    <a class="nav-link bg-dark" href='/pair'>Manage pairs</a>
                                </li>
                            {{end}}
                            {{if or .AuthenticatedUser.Translator .AuthenticatedUser.Admin}}
                                <li class="nav-item bg-dark">
                                    <a class="nav-link bg-dark" href='/translate'>Translate text</a>
                                </li>
                            {{end}}
                            {{if .AuthenticatedUser.Admin}}
                                <li class="nav-item dropdown bg-dark">
                                    <a class="nav-link dropdown-toggle bg-dark" id="navbardrop" data-toggle="dropdown">Admin</a>
                                    <div class="dropdown-menu bg-dark">
                                        <a class="dropdown-item nav-link bg-dark" href='/model'>Manage models</a>
                                        <a class="dropdown-item nav-link bg-dark" href='/dataset'>Manage datasets</a>
                                        <a class="dropdown-item nav-link bg-dark" href='/train/status'>Training status</a>
                                        <a class="dropdown-item nav-link bg-dark" href='/user/signup/invitation/generate'>
                                            Create invitation link
                                        </a>
                                    </div>
                                </li>
                            {{end}}

                            <li class="nav-item nav-end bg-dark">
                                <form action='/user/logout' method='POST'>
                                    <input type='hidden' name='csrf_token' value='{{.CSRFToken}}'>
                                    <button class="nav-link bg-dark" >Logout ({{.AuthenticatedUser.Name}})</button>
                                </form>
                            </li>
                        {{else}}
                            <li class="nav-item nav-end bg-dark">
                                <a class="nav-link bg-dark" href='/user/login'>Login</a>
                            </li>
                        {{end}}
                    </ul>
                </div>
            </nav>
        </header>

        <div id="swup" class="first-container">
            {{with .Flash}}
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class='alert alert-success font-weight-bold text-center'>{{.}}</div>
                    </div>
                </div>
            </div>
            {{end}}
            <main class="container content bg-dark transition-fade">
                {{template "body" .}}
            </main>
        </div>
        {{template "footer" .}}
        <!-- And include the JavaScript file -->
        <!--
        <script src="/static/js/main.js" type="text/javascript"></script>
        -->
        <script type="text/javascript">
            let options = {
                debugMode: true,
                cache: false
            }
            const swup = new Swup(options);

            function init () {
                // Reload only on landing page
                var element = document.getElementById('landing-menu');
                if (typeof(element) != 'undefined' && element != null)
                {
                    const controller = new NavController(document.querySelector('.menu'));
                    // Preload all the images in the page..
                    imagesLoaded(document.querySelectorAll('.grid__item'), {background: true},
                                 () => document.body.classList.remove('loading'));
                }

                var element = document.getElementById('source-text');
                if (typeof(element) != 'undefined' && element != null)
                {
                    document.getElementById('source-text').addEventListener('keydown', keyBoardListener);
                }


            }

            init();
            document.addEventListener('swup:willReplaceContent', init);
            document.addEventListener('swup:contentReplaced', init);
            window.addEventListener('paste', systemPasteListener);

            function selectAllExport(source) {
                checkboxes = document.getElementsByClassName('export-pair');
                for(var i=0, n=checkboxes.length;i<n;i++) {
                    checkboxes[i].checked = source.checked;
                }
            }

            function getPairIdsToExport() {
                checkboxes = document.getElementsByClassName('export-pair');
                ids = ""
                for(var i=0, n=checkboxes.length;i<n;i++) {
                    if(checkboxes[i].checked){
                        ids = ids + checkboxes[i].value + ","
                    }
                }
                return ids.replace(/,$/g, '');
            }

            function submitExportPairForm() {
                document.exportPairForm.idList.value = getPairIdsToExport()
                document.exportPairForm.action="/pairs/export";
                document.exportPairForm.submit();
                window.location = "/pair";
            }

            function submitExportTranslation() {
                document.exportPairForm.idList.value = getPairIdsToExport()
                document.exportPairForm.action="/pairs/export";
                document.exportPairForm.submit();
                window.location = "/pair";
            }

            function sleep(milliseconds) {
              var start = new Date().getTime();
              for (var i = 0; i < 1e7; i++) {
                if ((new Date().getTime() - start) > milliseconds){
                  break;
                }
              }
            }

            function httpGet(theUrl)
            {
                var xmlHttp = new XMLHttpRequest();
                xmlHttp.open( "GET", theUrl, false ); // false for synchronous request
                xmlHttp.send( null );
                return xmlHttp.responseText;
            }

            function reconstructText(ele) {
                var text = "";
                var divs = ele.getElementsByTagName("div");
                for(var i = 0; i < divs.length; i++){
                   text += divs[i].textContent + "\n";
                }

                return text;
            }

            function formatTextWithDiv(inputText){
                var formattedText = "";

                var text = inputText.split("\n");
                for (var i=0;i<text.length;i++){
                    formattedText += "<div>" + text[i]+"</div>";
                    console.log("."+formattedText+".");
                }

                return formattedText;
            }

            function getTranslation(currentText){
                var url = "/translate/" + encodeURIComponent(currentText);
                var raw = httpGet(url);
                var reply = JSON.parse(raw);

                return formatTextWithDiv(reply["Translation"]);
            }

            function translate() {
                var title = document.getElementById('source-text');
                var b = reconstructText(title);
                console.log(b);
                var text = reconstructText(title).split("\n");
                var paragraphCount = 0;
                var totalReply = "";
                var currentText = "";
                for (var i=0;i<text.length;i++)
                {
                    currentText += text[i] + "\n";
                    paragraphCount++;
                    if (paragraphCount == 30){
                        totalReply += getTranslation(currentText);

                        currentText = "";
                        paragraphCount = 0;
                        sleep(1000);
                    }
                }
                if (currentText != ""){
                    totalReply += getTranslation(currentText);
                }
                var target = document.getElementById('target-text');
                target.innerHTML = totalReply;
            }

            function exportTranslation(){
                var sourceTitle = document.getElementById('source-text');
                var sourceText = reconstructText(sourceTitle);
                var targetTitle = document.getElementById('target-text');
                var targetText = reconstructText(targetTitle);
                var url = "/translate/export?source=" + encodeURIComponent(sourceText) + "&target=" + encodeURIComponent(targetText);

                console.log(url)

                window.open(url, "_blank");
            }

            function keyBoardListener(evt) {
                if (evt.ctrlKey) {
                    switch(evt.keyCode) {
                        case 86: // v
                            paste(evt.target);
                            break;
                    }
                }
            }

            function paste(target) {
                systemPasteReady = false;
                function waitForPaste() {
                    if (!systemPasteReady) {
                        setTimeout(waitForPaste, 250);
                        return;
                    }

                    target.innerHTML = formatTextWithDiv(systemPasteContent);
                    systemPasteReady = false;
                    document.body.removeChild(textArea);
                    textArea = null;

                }

                // FireFox requires at least one editable
                // element on the screen for the paste event to fire
                textArea = document.createElement('textarea');
                textArea.setAttribute('style', 'width:1px;border:0;opacity:0;');

                document.body.appendChild(textArea);
                textArea.select();
                waitForPaste();
            }

            function systemPasteListener(evt) {
                systemPasteContent = evt.clipboardData.getData('text/plain');
                systemPasteReady = true;
                evt.preventDefault();
            }
        </script>
    </body>
</html>
{{end}}